{"version":3,"sources":["components/Header.jsx","utils/api.js","utils/currentApi.js","components/Input.jsx","components/Main.jsx","components/App.jsx","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","href","src","logo","alt","api","urlApi","this","_url","response","ok","json","Promise","reject","status","fetch","then","res","_handleResponse","base","Input","selectValue","inputValue","allCurrency","nameInput","nameSelect","onValueChange","onSelectChange","type","placeholder","value","name","onChange","e","Object","keys","sort","map","item","index","key","Main","React","useEffect","getCurrency","data","setAllCurrency","rates","useState","setBase","inputValueLeft","setInputValueLeft","selectСurrencyLeft","setSelectCurrencyLeft","RUB","inputValueRight","setInputValueRight","selectСurrencyRight","setSelectCurrencyRight","roudingValue","Math","floor","handleInput","target","handleInputLeft","handleInputRight","handleSelect","handleSelectLeft","handleSelectRight","setNewBase","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7222dbba.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo-container\">\r\n        <a href=\"./\">\r\n          <img\r\n            src={logo}\r\n            alt=\"Супер лого Конвертера\"\r\n            className=\"header__logo\"\r\n          />\r\n        </a>\r\n        <p className=\"header__logo-sub\">Мой Конвертер Валют</p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  currenciesApi\r\n} from \"./currentApi\";\r\n\r\nclass Api {\r\n  constructor(urlApi) {\r\n    this._url = urlApi;\r\n  }\r\n\r\n  _handleResponse(response) {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${response.status}`);\r\n  }\r\n\r\n  getCurrency() {\r\n    return fetch(`${this._url}`).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  setNewBase(base) {\r\n    return fetch(`${this._url}?base=${base}`).then((res) => this._handleResponse(res));\r\n  }\r\n}\r\n\r\nconst api = new Api(currenciesApi);\r\n\r\nexport default api","export const currenciesApi = `https://api.exchangeratesapi.io/latest`","import React from 'react';\r\n\r\nfunction Input({\r\n  className,\r\n  selectValue,\r\n  inputValue,\r\n  allCurrency,\r\n  nameInput,\r\n  nameSelect,\r\n  onValueChange,\r\n  onSelectChange,\r\n}) {\r\n  function handleChangeValue(e) {\r\n    onValueChange(e);\r\n  }\r\n\r\n  function handleChangeSelect(e) {\r\n    onSelectChange(e);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"form__input-container\">\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Введите значение\"\r\n          className={`form__input ${className} form__input_type_entity-id`}\r\n          value={inputValue ? inputValue : ''}\r\n          name={nameInput}\r\n          onChange={handleChangeValue}\r\n        />\r\n      </div>\r\n      <div className=\"form__select-container\">\r\n        <select\r\n          value={selectValue}\r\n          name={nameSelect}\r\n          onChange={handleChangeSelect}\r\n          className=\"form__select\"\r\n        >\r\n          {allCurrency\r\n            ? Object.keys(allCurrency)\r\n                .sort()\r\n                .map((item, index) => (\r\n                  <option\r\n                    className=\"form__select-option\"\r\n                    key={index}\r\n                    value={item}\r\n                  >\r\n                    {item}\r\n                  </option>\r\n                ))\r\n            : null}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Input from './Input';\r\n\r\nfunction Main() {\r\n  React.useEffect(() => {\r\n    api.getCurrency().then((data) => {\r\n      setAllCurrency({ ...data.rates, [data.base]: 1 });\r\n    });\r\n  }, []);\r\n\r\n  const [base, setBase] = React.useState('EUR');\r\n  const [allCurrency, setAllCurrency] = React.useState({});\r\n\r\n  const [inputValueLeft, setInputValueLeft] = React.useState('1');\r\n  const [selectСurrencyLeft, setSelectCurrencyLeft] = React.useState(base);\r\n\r\n  const [inputValueRight, setInputValueRight] = React.useState(allCurrency.RUB);\r\n  const [selectСurrencyRight, setSelectCurrencyRight] = React.useState('RUB');\r\n\r\n  function roudingValue(value) {\r\n    return Math.floor(value * 100) / 100;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setInputValueRight(\r\n      roudingValue(inputValueLeft * allCurrency[selectСurrencyRight])\r\n    );\r\n  }, [allCurrency, selectСurrencyRight]);\r\n\r\n  React.useEffect(() => {\r\n    api.setNewBase(base).then((data) => {\r\n      setAllCurrency({ ...data.rates, [data.base]: 1 });\r\n    });\r\n  }, [base]);\r\n\r\n  function handleInput(e) {\r\n    e.target.name === 'left' ? handleInputLeft(e) : handleInputRight(e);\r\n  }\r\n\r\n  function handleInputLeft(e) {\r\n    setInputValueLeft(e.target.value);\r\n    setInputValueRight(\r\n      roudingValue(e.target.value * allCurrency[selectСurrencyRight])\r\n    );\r\n  }\r\n\r\n  function handleInputRight(e) {\r\n    setInputValueRight(e.target.value);\r\n    setInputValueLeft(\r\n      roudingValue(e.target.value / allCurrency[selectСurrencyRight])\r\n    );\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    setBase(e.target.value);\r\n    e.target.name === 'leftCurrency'\r\n      ? handleSelectLeft(e)\r\n      : handleSelectRight(e);\r\n  }\r\n\r\n  function handleSelectLeft(e) {\r\n    setSelectCurrencyLeft(e.target.value);\r\n    setBase(e.target.value);\r\n    setInputValueRight(\r\n      roudingValue(inputValueLeft * allCurrency[selectСurrencyRight])\r\n    );\r\n  }\r\n  function handleSelectRight(e) {\r\n    setSelectCurrencyRight(e.target.value);\r\n    setBase(selectСurrencyLeft);\r\n  }\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <form name=\"search\" className=\"form form_type_search\">\r\n        <h1 className=\"form__title\">Какая пара валют?</h1>\r\n        <div className=\"form__section\">\r\n          <div className=\"form__wrapper form__wrapper_type_left\">\r\n            <Input\r\n              className=\"form__input_left\"\r\n              selectValue={selectСurrencyLeft}\r\n              inputValue={inputValueLeft}\r\n              allCurrency={allCurrency}\r\n              nameInput=\"left\"\r\n              nameSelect=\"leftCurrency\"\r\n              onValueChange={handleInput}\r\n              onSelectChange={handleSelect}\r\n            />\r\n          </div>\r\n          <div className=\"form__wrapper\">\r\n            <Input\r\n              className=\"form__input_right\"\r\n              selectValue={selectСurrencyRight}\r\n              inputValue={inputValueRight}\r\n              allCurrency={allCurrency}\r\n              nameInput=\"right\"\r\n              nameSelect=\"rightCurrency\"\r\n              onValueChange={handleInput}\r\n              onSelectChange={handleSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './pages/style.css';\r\nimport App from './components/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.8c065617.svg\";"],"sourceRoot":""}